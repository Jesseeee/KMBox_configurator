{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"header": {
		"scope": "cpp",
		"prefix": [
			"hdr",
			"header"
		],
		"description": "CPP source template",
		"body": [
			"/**",
			" * @file ${TM_FILENAME}",
			" *",
			" * @brief TODO",
			" *",
			" * &copy; Copyright ${CURRENT_YEAR} ScioTeq bv. All rights reserved.",
			"* +-------------------------------------------------------------------------------------------+",
			"* |                             Export Control Information                                    |",
			"* +--------+-------------+-------------------------------------+------------------------------+",
			"* | Origin |   Country   |     Jurisdiction & Control List     |     Authorization number     |",
			"* +--------+-------------+-------------------------------------+------------------------------+",
			"* |    X   |   Belgium   |                 n/a                 |              n/a             |",
			"* |        |             +-------------------------------------+------------------------------+",
			"* |        |             |  Export control marking is not applicable to Belgian regulations.  |",
			"* +--------+-------------+--------------------------------------------------------------------+",
			"*",
			"* <H3>Purpose</H3>",
			"* - <!--purpose-->",
			"*",
			"* <H3>Notes</H3>",
			"* - <!--notes-->",
			"*",
			"* <H3>Author</H3>",
			"* - ${CURRENT_MONTH_NAME_SHORT} ${CURRENT_DATE}, ${CURRENT_YEAR} ; TODO",
			"*/",
			"#ifndef ${TM_FILENAME/(?:^.*\\\\src\\\\)?(\\w+)\\W?/${1:/upcase}_/g}",
			"#define ${TM_FILENAME/(?:^.*\\\\src\\\\)?(\\w+)\\W?/${1:/upcase}_/g}\n",
			"class ${TM_FILENAME_BASE}",
			"{",
			"public:",
			"\t${TM_FILENAME_BASE}();",
			"\tvirtual ~${TM_FILENAME_BASE}();\n",
			"private:",
			"\t//Disable copy and move semantics by default",
			"\t${TM_FILENAME_BASE}(const ${TM_FILENAME_BASE}&) = delete;",
			"\t${TM_FILENAME_BASE}(${TM_FILENAME_BASE}&&) = delete;",
			"\t${TM_FILENAME_BASE}& operator=(const ${TM_FILENAME_BASE}&) = delete;",
			"\t${TM_FILENAME_BASE}& operator=(${TM_FILENAME_BASE}&&) = delete;",
			"\n};\n",
			"#endif"
		],
	},
	"source": {
		"scope": "cpp",
		"prefix": [
			"src",
			"source"
		],
		"description": "CPP header template",
		"body": [
			"/**",
			" * @file ${TM_FILENAME}",
			" *",
			" * @brief TODO",
			" *",
			" * &copy; Copyright ${CURRENT_YEAR} ScioTeq bv. All rights reserved.",
			"* +-------------------------------------------------------------------------------------------+",
			"* |                             Export Control Information                                    |",
			"* +--------+-------------+-------------------------------------+----------->-------------------+",
			"* | Origin |   Country   |     Jurisdiction & Control List     |     Authorization number     |",
			"* +--------+-------------+-------------------------------------+------------------------------+",
			"* |    X   |   Belgium   |                 n/a                 |              n/a             |",
			"* |        |             +-------------------------------------+------------------------------+",
			"* |        |             |  Export control marking is not applicable to Belgian regulations.  |",
			"* +--------+-------------+--------------------------------------------------------------------+",
			"*",
			"* <H3>Purpose</H3>",
			"* - <!--purpose-->",
			"*",
			"* <H3>Notes</H3>",
			"* - <!--notes-->",
			"*",
			"* <H3>Author</H3>",
			"* - ${CURRENT_MONTH_NAME_SHORT} ${CURRENT_DATE}, ${CURRENT_YEAR} ; TODO",
			"*/",
			"\n#include \"${TM_FILENAME_BASE}.hpp\"\n",
			"${TM_FILENAME_BASE}::${TM_FILENAME_BASE}()\n{}\n",
			"${TM_FILENAME_BASE}::~${TM_FILENAME_BASE}()\n{}\n",
		]
	},
	"debuglow": {
		"scope": "cpp",
		"description": "DOUT_L template",
		"prefix": [
			"doutl"
		],
		"body": [
			"DOUT_L(${0} << std::endl);"
		]
	},
	"debugmedium": {
		"scope": "cpp",
		"description": "DOUT_M template",
		"prefix": [
			"doutm",
		],
		"body": [
			"DOUT_M(${0} << std::endl);"
		]
	},
	"debughigh": {
		"scope": "cpp",
		"description": "DOUT_H template",
		"prefix": [
			"douth"
		],
		"body": [
			"DOUT_H(${0} << std::endl);"
		]
	},
	"debugerror": {
		"scope": "cpp",
		"description": "DOUT_E template",
		"prefix": [
			"doute"
		],
		"body": [
			"DOUT_E(${0} << std::endl);"
		]
	}
}